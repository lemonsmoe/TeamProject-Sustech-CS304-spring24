{"ast":null,"code":"export default {\n  data() {\n    return {\n      days: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n      periods: [1, 2, 3, 4, 5, 6],\n      selectedDays: Array(7).fill(false),\n      selectedPeriods: Array(6).fill(false),\n      selectedCells: Array(7).fill(null).map(() => Array(6).fill(false)),\n      isAllSelected: false\n    };\n  },\n  methods: {\n    toggleAll() {\n      this.isAllSelected = !this.isAllSelected;\n      for (let i = 0; i < this.days.length; i++) {\n        this.selectedDays[i] = this.isAllSelected;\n        for (let j = 0; j < this.periods.length; j++) {\n          this.selectedCells[i][j] = this.isAllSelected;\n        }\n      }\n      this.selectedPeriods.fill(this.isAllSelected);\n    },\n    toggleDay(dayIndex) {\n      this.selectedDays[dayIndex] = !this.selectedDays[dayIndex];\n      for (let i = 0; i < this.periods.length; i++) {\n        this.selectedCells[dayIndex][i] = this.selectedDays[dayIndex];\n      }\n    },\n    togglePeriod(periodIndex) {\n      this.selectedPeriods[periodIndex] = !this.selectedPeriods[periodIndex];\n      for (let i = 0; i < this.days.length; i++) {\n        this.selectedCells[i][periodIndex] = this.selectedPeriods[periodIndex];\n      }\n    },\n    toggleCell(dayIndex, periodIndex) {\n      this.$set(this.selectedCells[dayIndex], periodIndex, !this.selectedCells[dayIndex][periodIndex]);\n    }\n  }\n};","map":{"version":3,"names":["data","days","periods","selectedDays","Array","fill","selectedPeriods","selectedCells","map","isAllSelected","methods","toggleAll","i","length","j","toggleDay","dayIndex","togglePeriod","periodIndex","toggleCell","$set"],"sources":["src/components/timetable.vue"],"sourcesContent":["<template>\r\n    <div>fuck</div>\r\n    <div id=\"schedule-grid\">\r\n      <div\r\n        class=\"schedule-cell-row-header\"\r\n        :class=\"{ selected: isAllSelected }\"\r\n        @click=\"toggleAll\"\r\n      ></div>\r\n      <div\r\n        v-for=\"(day, index) in days\"\r\n        :key=\"day\"\r\n        class=\"schedule-cell-column-header\"\r\n        :class=\"{ selected: selectedDays[index] }\"\r\n        @click=\"toggleDay(index)\"\r\n      >\r\n        {{ day }}\r\n      </div>\r\n      <template v-for=\"(periodIndex, period) in periods\">\r\n        <div\r\n          :key=\"'header-' + periodIndex\"\r\n          class=\"schedule-cell-row-header\"\r\n          :class=\"{ selected: selectedPeriods[periodIndex] }\"\r\n          @click=\"togglePeriod(periodIndex)\"\r\n        >\r\n          {{ period }}\r\n        </div>\r\n        <template v-for=\"(dayIndex, day) in days\">\r\n          <div\r\n            :key=\"day + '-' + period\"\r\n            class=\"schedule-cell\"\r\n            :class=\"{ selected: selectedCells[dayIndex][periodIndex] }\"\r\n            @click=\"toggleCell(dayIndex, periodIndex)\"\r\n          ></div>\r\n        </template>\r\n      </template>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        days: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n        periods: [1, 2, 3, 4, 5, 6],\r\n        selectedDays: Array(7).fill(false),\r\n        selectedPeriods: Array(6).fill(false),\r\n        selectedCells: Array(7).fill(null).map(() => Array(6).fill(false)),\r\n        isAllSelected: false,\r\n      };\r\n    },\r\n    methods: {\r\n      toggleAll() {\r\n        this.isAllSelected = !this.isAllSelected;\r\n        for (let i = 0; i < this.days.length; i++) {\r\n          this.selectedDays[i] = this.isAllSelected;\r\n          for (let j = 0; j < this.periods.length; j++) {\r\n            this.selectedCells[i][j] = this.isAllSelected;\r\n          }\r\n        }\r\n        this.selectedPeriods.fill(this.isAllSelected);\r\n      },\r\n      toggleDay(dayIndex) {\r\n        this.selectedDays[dayIndex] = !this.selectedDays[dayIndex];\r\n        for (let i = 0; i < this.periods.length; i++) {\r\n          this.selectedCells[dayIndex][i] = this.selectedDays[dayIndex];\r\n        }\r\n      },\r\n      togglePeriod(periodIndex) {\r\n        this.selectedPeriods[periodIndex] = !this.selectedPeriods[periodIndex];\r\n        for (let i = 0; i < this.days.length; i++) {\r\n          this.selectedCells[i][periodIndex] = this.selectedPeriods[periodIndex];\r\n        }\r\n      },\r\n      toggleCell(dayIndex, periodIndex) {\r\n        this.$set(this.selectedCells[dayIndex], periodIndex, !this.selectedCells[dayIndex][periodIndex]);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add your styles here */\r\n  .schedule-cell, .schedule-cell-row-header, .schedule-cell-column-header {\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 50px;\r\n    border: 1px solid #ddd;\r\n    text-align: center;\r\n    line-height: 50px;\r\n    cursor: pointer;\r\n  }\r\n  .selected {\r\n    background-color: #3498db;\r\n    color: #fff;\r\n  }\r\n  </style>"],"mappings":"AAuCA;EACAA,KAAA;IACA;MACAC,IAAA;MACAC,OAAA;MACAC,YAAA,EAAAC,KAAA,IAAAC,IAAA;MACAC,eAAA,EAAAF,KAAA,IAAAC,IAAA;MACAE,aAAA,EAAAH,KAAA,IAAAC,IAAA,OAAAG,GAAA,OAAAJ,KAAA,IAAAC,IAAA;MACAI,aAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,KAAAF,aAAA,SAAAA,aAAA;MACA,SAAAG,CAAA,MAAAA,CAAA,QAAAX,IAAA,CAAAY,MAAA,EAAAD,CAAA;QACA,KAAAT,YAAA,CAAAS,CAAA,SAAAH,aAAA;QACA,SAAAK,CAAA,MAAAA,CAAA,QAAAZ,OAAA,CAAAW,MAAA,EAAAC,CAAA;UACA,KAAAP,aAAA,CAAAK,CAAA,EAAAE,CAAA,SAAAL,aAAA;QACA;MACA;MACA,KAAAH,eAAA,CAAAD,IAAA,MAAAI,aAAA;IACA;IACAM,UAAAC,QAAA;MACA,KAAAb,YAAA,CAAAa,QAAA,UAAAb,YAAA,CAAAa,QAAA;MACA,SAAAJ,CAAA,MAAAA,CAAA,QAAAV,OAAA,CAAAW,MAAA,EAAAD,CAAA;QACA,KAAAL,aAAA,CAAAS,QAAA,EAAAJ,CAAA,SAAAT,YAAA,CAAAa,QAAA;MACA;IACA;IACAC,aAAAC,WAAA;MACA,KAAAZ,eAAA,CAAAY,WAAA,UAAAZ,eAAA,CAAAY,WAAA;MACA,SAAAN,CAAA,MAAAA,CAAA,QAAAX,IAAA,CAAAY,MAAA,EAAAD,CAAA;QACA,KAAAL,aAAA,CAAAK,CAAA,EAAAM,WAAA,SAAAZ,eAAA,CAAAY,WAAA;MACA;IACA;IACAC,WAAAH,QAAA,EAAAE,WAAA;MACA,KAAAE,IAAA,MAAAb,aAAA,CAAAS,QAAA,GAAAE,WAAA,QAAAX,aAAA,CAAAS,QAAA,EAAAE,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}