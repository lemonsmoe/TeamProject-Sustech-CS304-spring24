{"ast":null,"code":"import Layout from '@/components/Layout.vue';\nimport request from \"@/utils/request\";\nexport default {\n  components: {\n    Layout\n  },\n  data() {\n    return {\n      isCollapse: false,\n      asideWidth: '200px',\n      collapseIcon: 'el-icon-s-fold',\n      form: {\n        category: '',\n        sort: '',\n        search: ''\n      },\n      courses: [],\n      currentPage: 1,\n      pageSize: 10,\n      totalCourses: 0\n    };\n  },\n  computed: {\n    filteredCourses() {\n      let filtered = this.courses;\n      if (this.form.category) {\n        filtered = filtered.filter(course => course.course_type.includes(this.form.category));\n      }\n      if (this.form.search) {\n        const searchLower = this.form.search.toLowerCase();\n        filtered = filtered.filter(course => course.course_name.toLowerCase().includes(searchLower));\n      }\n      if (this.form.sort === 'rating') {\n        filtered = filtered.sort((a, b) => b.avg_rating - a.avg_rating);\n      } else if (this.form.sort === 'reviews') {\n        filtered = filtered.sort((a, b) => b.review_count - a.review_count);\n      }\n      return filtered;\n    }\n  },\n  mounted() {\n    this.fetchCourseBriefs();\n  },\n  methods: {\n    handleFullScreen() {\n      document.documentElement.requestFullscreen();\n    },\n    handleCollapse() {\n      this.isCollapse = !this.isCollapse;\n      this.asideWidth = this.isCollapse ? '64px' : '200px';\n      this.collapseIcon = this.isCollapse ? 'el-icon-s-unfold' : 'el-icon-s-fold';\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.fetchCourseBriefs();\n    },\n    async fetchCourseBriefs() {\n      try {\n        const coursesResponse = await request.get('/evaluation/courses/brief');\n        const reviewsResponse = await request.get('/evaluation/review/getbrief');\n        if (coursesResponse.status === 200 && reviewsResponse.status === 200) {\n          const courses = coursesResponse.data;\n          const reviews = reviewsResponse.data;\n          const reviewDict = {};\n          reviews.forEach(review => {\n            reviewDict[review.course_id] = review;\n          });\n          courses.forEach(course => {\n            if (reviewDict[course.course_id]) {\n              course.avg_rating = reviewDict[course.course_id].avg_rating;\n              course.review_count = reviewDict[course.course_id].review_count;\n            } else {\n              course.avg_rating = 0;\n              course.review_count = 0;\n            }\n          });\n          this.courses = courses;\n          this.totalCourses = courses.length;\n        } else {\n          this.$message.error(\"获取课程信息或评价信息失败\");\n        }\n      } catch (error) {\n        console.error(\"获取课程信息或评价信息失败:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Layout","request","components","data","isCollapse","asideWidth","collapseIcon","form","category","sort","search","courses","currentPage","pageSize","totalCourses","computed","filteredCourses","filtered","filter","course","course_type","includes","searchLower","toLowerCase","course_name","a","b","avg_rating","review_count","mounted","fetchCourseBriefs","methods","handleFullScreen","document","documentElement","requestFullscreen","handleCollapse","handleCurrentChange","val","coursesResponse","get","reviewsResponse","status","reviews","reviewDict","forEach","review","course_id","length","$message","error","console"],"sources":["src/views/PingJiao/PingJiao.vue"],"sourcesContent":["<template>\r\n  <Layout>\r\n    <el-main>\r\n      <el-card style=\"margin-bottom: 10px\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>评教系统</span>\r\n        </div>\r\n        <el-form :inline=\"true\" :model=\"form\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"课程类别\">\r\n            <el-select v-model=\"form.category\" placeholder=\"请选择课程类别\" @change=\"fetchCourseBriefs\">\r\n              <el-option label=\"通识必修课\" value=\"general_required\"></el-option>\r\n              <el-option label=\"专业基础课\" value=\"major_basic\"></el-option>\r\n              <el-option label=\"专业核心课\" value=\"major_core\"></el-option>\r\n              <el-option label=\"专业选修课\" value=\"major_elective\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"排序方式\">\r\n            <el-select v-model=\"form.sort\" placeholder=\"请选择排序方式\" @change=\"fetchCourseBriefs\">\r\n              <el-option label=\"评分高低\" value=\"rating\"></el-option>\r\n              <el-option label=\"评价人数多少\" value=\"reviews\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"课程名称\">\r\n            <el-input v-model=\"form.search\" placeholder=\"请输入课程名称关键词\" @input=\"fetchCourseBriefs\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n\r\n      <el-card v-for=\"(course, index) in filteredCourses\" :key=\"index\" style=\"margin-bottom: 10px\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>{{ course.course_name }}</span>\r\n          <router-link :to=\"{ name: 'coursedetail', params: { id: course.course_id } }\">\r\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\">查看详情</el-button>\r\n          </router-link>\r\n        </div>\r\n        <div>\r\n          <p>课程ID: {{ course.course_id }}</p>\r\n          <p>授课类型: {{ course.course_type }}</p>\r\n          <p>学时: {{ course.credit }}</p>\r\n          <p>开课单位: {{ course.college }}</p>\r\n          <p>平均评分: {{ course.avg_rating }}</p>\r\n          <p>评价人数: {{ course.review_count }}</p>\r\n        </div>\r\n      </el-card>\r\n\r\n      <el-pagination\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"currentPage\"\r\n        :page-size=\"pageSize\"\r\n        layout=\"total, prev, pager, next\"\r\n        :total=\"totalCourses\">\r\n      </el-pagination>\r\n    </el-main>\r\n  </Layout>\r\n</template>\r\n  \r\n\r\n<script>\r\nimport Layout from '@/components/Layout.vue'\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  components: {\r\n    Layout\r\n  },\r\n  data() {\r\n    return {\r\n      isCollapse: false,\r\n      asideWidth: '200px',\r\n      collapseIcon: 'el-icon-s-fold',\r\n      form: {\r\n        category: '',\r\n        sort: '',\r\n        search: ''\r\n      },\r\n      courses: [],\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      totalCourses: 0\r\n    };\r\n  },\r\n  computed: {\r\n    filteredCourses() {\r\n      let filtered = this.courses;\r\n\r\n      if (this.form.category) {\r\n        filtered = filtered.filter(course => course.course_type.includes(this.form.category));\r\n      }\r\n\r\n      if (this.form.search) {\r\n        const searchLower = this.form.search.toLowerCase();\r\n        filtered = filtered.filter(course => course.course_name.toLowerCase().includes(searchLower));\r\n      }\r\n\r\n      if (this.form.sort === 'rating') {\r\n        filtered = filtered.sort((a, b) => b.avg_rating - a.avg_rating);\r\n      } else if (this.form.sort === 'reviews') {\r\n        filtered = filtered.sort((a, b) => b.review_count - a.review_count);\r\n      }\r\n\r\n      return filtered;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchCourseBriefs();\r\n  },\r\n  methods: {\r\n    handleFullScreen() {\r\n      document.documentElement.requestFullscreen()\r\n    },\r\n    handleCollapse() {\r\n      this.isCollapse = !this.isCollapse\r\n      this.asideWidth = this.isCollapse ? '64px' : '200px'\r\n      this.collapseIcon = this.isCollapse ? 'el-icon-s-unfold' : 'el-icon-s-fold'\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      this.fetchCourseBriefs();\r\n    },\r\n    async fetchCourseBriefs() {\r\n      try {\r\n        const coursesResponse = await request.get('/evaluation/courses/brief');\r\n        const reviewsResponse = await request.get('/evaluation/review/getbrief');\r\n        \r\n        if (coursesResponse.status === 200 && reviewsResponse.status === 200) {\r\n          const courses = coursesResponse.data;\r\n          const reviews = reviewsResponse.data;\r\n          const reviewDict = {};\r\n          \r\n          reviews.forEach(review => {\r\n            reviewDict[review.course_id] = review;\r\n          });\r\n\r\n          courses.forEach(course => {\r\n            if (reviewDict[course.course_id]) {\r\n              course.avg_rating = reviewDict[course.course_id].avg_rating;\r\n              course.review_count = reviewDict[course.course_id].review_count;\r\n            } else {\r\n              course.avg_rating = 0;\r\n              course.review_count = 0;\r\n            }\r\n          });\r\n\r\n          this.courses = courses;\r\n          this.totalCourses = courses.length;\r\n        } else {\r\n          this.$message.error(\"获取课程信息或评价信息失败\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"获取课程信息或评价信息失败:\", error);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.forum-container {\r\n  width: 80%;\r\n  margin: auto;\r\n}\r\n.category-buttons {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n.search-input {\r\n  width: 200px;\r\n}\r\n.filter-buttons {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n}\r\n.topics-header, .topic-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px 0;\r\n}\r\n.topics-header {\r\n  font-weight: bold;\r\n  border-bottom: 2px solid #ddd; /* 添加下边框 */\r\n}\r\n.topic-item {\r\n  border-bottom: 1px solid #ddd; /* 添加下边框 */\r\n  padding: 10px 0; /* 添加内边距 */\r\n}\r\n.topic-item {\r\n  text-decoration: none; /* 去除下划线 */\r\n  color: inherit; /* 使用继承的颜色 */\r\n}\r\n\r\n.topic-item:hover {\r\n  text-decoration: none; /* 去除下划线 */\r\n}\r\n\r\n.topic-title {\r\n  color: black; /* 设置标题颜色为黑色，或根据需要调整 */\r\n}\r\n\r\n/*可选：为链接的其他状态设置颜色\r\n.topic-item:visited {\r\n  color: inherit; 使用继承的颜色，防止变成紫色 \r\n}*/\r\n\r\n\r\n.topics-header {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding-right: 10px; \r\n  margin-left: auto; \r\n  font-weight: bold;\r\n  border-bottom: 2px solid #ddd; \r\n}\r\n.topics-header span {\r\n  margin-left: 10px; \r\n}\r\n\r\n.topic-info span {\r\n  margin-right: 15px; \r\n}\r\n.quick-post {\r\n  margin-top: 20px;\r\n}\r\n.post-title, .post-content {\r\n  margin-bottom: 10px;\r\n}\r\n.post-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n.pagination {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AA0DA,OAAAA,MAAA;AACA,OAAAC,OAAA;AAEA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,UAAA;MACAC,UAAA;MACAC,YAAA;MACAC,IAAA;QACAC,QAAA;QACAC,IAAA;QACAC,MAAA;MACA;MACAC,OAAA;MACAC,WAAA;MACAC,QAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACAC,gBAAA;MACA,IAAAC,QAAA,QAAAN,OAAA;MAEA,SAAAJ,IAAA,CAAAC,QAAA;QACAS,QAAA,GAAAA,QAAA,CAAAC,MAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAC,WAAA,CAAAC,QAAA,MAAAd,IAAA,CAAAC,QAAA;MACA;MAEA,SAAAD,IAAA,CAAAG,MAAA;QACA,MAAAY,WAAA,QAAAf,IAAA,CAAAG,MAAA,CAAAa,WAAA;QACAN,QAAA,GAAAA,QAAA,CAAAC,MAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAK,WAAA,CAAAD,WAAA,GAAAF,QAAA,CAAAC,WAAA;MACA;MAEA,SAAAf,IAAA,CAAAE,IAAA;QACAQ,QAAA,GAAAA,QAAA,CAAAR,IAAA,EAAAgB,CAAA,EAAAC,CAAA,KAAAA,CAAA,CAAAC,UAAA,GAAAF,CAAA,CAAAE,UAAA;MACA,gBAAApB,IAAA,CAAAE,IAAA;QACAQ,QAAA,GAAAA,QAAA,CAAAR,IAAA,EAAAgB,CAAA,EAAAC,CAAA,KAAAA,CAAA,CAAAE,YAAA,GAAAH,CAAA,CAAAG,YAAA;MACA;MAEA,OAAAX,QAAA;IACA;EACA;EACAY,QAAA;IACA,KAAAC,iBAAA;EACA;EACAC,OAAA;IACAC,iBAAA;MACAC,QAAA,CAAAC,eAAA,CAAAC,iBAAA;IACA;IACAC,eAAA;MACA,KAAAhC,UAAA,SAAAA,UAAA;MACA,KAAAC,UAAA,QAAAD,UAAA;MACA,KAAAE,YAAA,QAAAF,UAAA;IACA;IACAiC,oBAAAC,GAAA;MACA,KAAA1B,WAAA,GAAA0B,GAAA;MACA,KAAAR,iBAAA;IACA;IACA,MAAAA,kBAAA;MACA;QACA,MAAAS,eAAA,SAAAtC,OAAA,CAAAuC,GAAA;QACA,MAAAC,eAAA,SAAAxC,OAAA,CAAAuC,GAAA;QAEA,IAAAD,eAAA,CAAAG,MAAA,YAAAD,eAAA,CAAAC,MAAA;UACA,MAAA/B,OAAA,GAAA4B,eAAA,CAAApC,IAAA;UACA,MAAAwC,OAAA,GAAAF,eAAA,CAAAtC,IAAA;UACA,MAAAyC,UAAA;UAEAD,OAAA,CAAAE,OAAA,CAAAC,MAAA;YACAF,UAAA,CAAAE,MAAA,CAAAC,SAAA,IAAAD,MAAA;UACA;UAEAnC,OAAA,CAAAkC,OAAA,CAAA1B,MAAA;YACA,IAAAyB,UAAA,CAAAzB,MAAA,CAAA4B,SAAA;cACA5B,MAAA,CAAAQ,UAAA,GAAAiB,UAAA,CAAAzB,MAAA,CAAA4B,SAAA,EAAApB,UAAA;cACAR,MAAA,CAAAS,YAAA,GAAAgB,UAAA,CAAAzB,MAAA,CAAA4B,SAAA,EAAAnB,YAAA;YACA;cACAT,MAAA,CAAAQ,UAAA;cACAR,MAAA,CAAAS,YAAA;YACA;UACA;UAEA,KAAAjB,OAAA,GAAAA,OAAA;UACA,KAAAG,YAAA,GAAAH,OAAA,CAAAqC,MAAA;QACA;UACA,KAAAC,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACAC,OAAA,CAAAD,KAAA,mBAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}